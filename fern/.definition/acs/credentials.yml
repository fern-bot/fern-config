# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  CredentialsAssignResponseAcsCredentialAccessMethod:
    enum:
      - code
      - card
      - mobile_key

  CredentialsAssignResponseAcsCredentialExternalType:
    enum:
      - pti_card
      - brivo_credential
      - hid_credential
      - visionline_card

  CredentialsAssignResponseAcsCredential:
    properties:
      acs_credential_id: string
      acs_user_id: optional<string>
      acs_credential_pool_id: optional<string>
      acs_system_id: string
      display_name: string
      code: optional<string>
      access_method: CredentialsAssignResponseAcsCredentialAccessMethod
      external_type: optional<CredentialsAssignResponseAcsCredentialExternalType>
      external_type_display_name: optional<string>
      created_at: datetime
      workspace_id: string
      starts_at: optional<string>
      ends_at: optional<string>
      is_multi_phone_sync_credential: optional<boolean>

  CredentialsAssignResponse:
    properties:
      acs_credential: CredentialsAssignResponseAcsCredential
      ok: boolean

  CredentialsCreateRequestAccessMethod:
    enum:
      - code
      - card
      - mobile_key

  CredentialsCreateRequestExternalType:
    enum:
      - pti_card
      - brivo_credential
      - hid_credential
      - visionline_card

  CredentialsCreateRequestCardFormat:
    enum:
      - TLCode
      - rfid48

  CredentialsCreateResponseAcsCredentialAccessMethod:
    enum:
      - code
      - card
      - mobile_key

  CredentialsCreateResponseAcsCredentialExternalType:
    enum:
      - pti_card
      - brivo_credential
      - hid_credential
      - visionline_card

  CredentialsCreateResponseAcsCredential:
    properties:
      acs_credential_id: string
      acs_user_id: optional<string>
      acs_credential_pool_id: optional<string>
      acs_system_id: string
      display_name: string
      code: optional<string>
      access_method: CredentialsCreateResponseAcsCredentialAccessMethod
      external_type: optional<CredentialsCreateResponseAcsCredentialExternalType>
      external_type_display_name: optional<string>
      created_at: datetime
      workspace_id: string
      starts_at: optional<string>
      ends_at: optional<string>
      is_multi_phone_sync_credential: optional<boolean>

  CredentialsCreateResponse:
    properties:
      acs_credential: CredentialsCreateResponseAcsCredential
      ok: boolean

  CredentialsDeleteResponse:
    properties:
      ok: boolean

  CredentialsGetResponseAcsCredentialAccessMethod:
    enum:
      - code
      - card
      - mobile_key

  CredentialsGetResponseAcsCredentialExternalType:
    enum:
      - pti_card
      - brivo_credential
      - hid_credential
      - visionline_card

  CredentialsGetResponseAcsCredential:
    properties:
      acs_credential_id: string
      acs_user_id: optional<string>
      acs_credential_pool_id: optional<string>
      acs_system_id: string
      display_name: string
      code: optional<string>
      access_method: CredentialsGetResponseAcsCredentialAccessMethod
      external_type: optional<CredentialsGetResponseAcsCredentialExternalType>
      external_type_display_name: optional<string>
      created_at: datetime
      workspace_id: string
      starts_at: optional<string>
      ends_at: optional<string>
      is_multi_phone_sync_credential: optional<boolean>

  CredentialsGetResponse:
    properties:
      acs_credential: CredentialsGetResponseAcsCredential
      ok: boolean

  CredentialsListRequestZero:
    properties:
      acs_user_id: string

  CredentialsListRequestOne:
    properties:
      acs_system_id: string

  CredentialsListRequestTwo:
    properties:
      acs_user_id: string
      acs_system_id: string

  CredentialsListRequestUserIdentityId:
    properties:
      user_identity_id: string

  CredentialsListRequest:
    discriminated: false
    union:
      - CredentialsListRequestZero
      - CredentialsListRequestOne
      - CredentialsListRequestTwo
      - CredentialsListRequestUserIdentityId

  CredentialsListResponseAcsCredentialsItemAccessMethod:
    enum:
      - code
      - card
      - mobile_key

  CredentialsListResponseAcsCredentialsItemExternalType:
    enum:
      - pti_card
      - brivo_credential
      - hid_credential
      - visionline_card

  CredentialsListResponseAcsCredentialsItem:
    properties:
      acs_credential_id: string
      acs_user_id: optional<string>
      acs_credential_pool_id: optional<string>
      acs_system_id: string
      display_name: string
      code: optional<string>
      access_method: CredentialsListResponseAcsCredentialsItemAccessMethod
      external_type: optional<CredentialsListResponseAcsCredentialsItemExternalType>
      external_type_display_name: optional<string>
      created_at: datetime
      workspace_id: string
      starts_at: optional<string>
      ends_at: optional<string>
      is_multi_phone_sync_credential: optional<boolean>

  CredentialsListResponse:
    properties:
      acs_credentials: list<CredentialsListResponseAcsCredentialsItem>
      ok: boolean

  CredentialsUnassignResponseAcsCredentialAccessMethod:
    enum:
      - code
      - card
      - mobile_key

  CredentialsUnassignResponseAcsCredentialExternalType:
    enum:
      - pti_card
      - brivo_credential
      - hid_credential
      - visionline_card

  CredentialsUnassignResponseAcsCredential:
    properties:
      acs_credential_id: string
      acs_user_id: optional<string>
      acs_credential_pool_id: optional<string>
      acs_system_id: string
      display_name: string
      code: optional<string>
      access_method: CredentialsUnassignResponseAcsCredentialAccessMethod
      external_type: optional<CredentialsUnassignResponseAcsCredentialExternalType>
      external_type_display_name: optional<string>
      created_at: datetime
      workspace_id: string
      starts_at: optional<string>
      ends_at: optional<string>
      is_multi_phone_sync_credential: optional<boolean>

  CredentialsUnassignResponse:
    properties:
      acs_credential: CredentialsUnassignResponseAcsCredential
      ok: boolean

  CredentialsUpdateResponseAcsCredentialAccessMethod:
    enum:
      - code
      - card
      - mobile_key

  CredentialsUpdateResponseAcsCredentialExternalType:
    enum:
      - pti_card
      - brivo_credential
      - hid_credential
      - visionline_card

  CredentialsUpdateResponseAcsCredential:
    properties:
      acs_credential_id: string
      acs_user_id: optional<string>
      acs_credential_pool_id: optional<string>
      acs_system_id: string
      display_name: string
      code: optional<string>
      access_method: CredentialsUpdateResponseAcsCredentialAccessMethod
      external_type: optional<CredentialsUpdateResponseAcsCredentialExternalType>
      external_type_display_name: optional<string>
      created_at: datetime
      workspace_id: string
      starts_at: optional<string>
      ends_at: optional<string>
      is_multi_phone_sync_credential: optional<boolean>

  CredentialsUpdateResponse:
    properties:
      acs_credential: CredentialsUpdateResponseAcsCredential
      ok: boolean

imports:
  root: ../__package__.yml

service:
  auth: false
  base-path: ""
  endpoints:
    assign:
      path: /acs/credentials/assign
      method: POST
      auth: true
      display-name: /acs/credentials/assign
      request:
        name: CredentialsAssignRequest
        body:
          properties:
            acs_user_id: string
            acs_credential_id: string
      response:
        docs: OK
        type: CredentialsAssignResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    create:
      path: /acs/credentials/create
      method: POST
      auth: true
      display-name: /acs/credentials/create
      request:
        name: CredentialsCreateRequest
        body:
          properties:
            acs_user_id: string
            access_method: CredentialsCreateRequestAccessMethod
            code: optional<string>
            is_multi_phone_sync_credential: optional<boolean>
            assa_abloy_credential_service_mobile_endpoint_id: optional<string>
            external_type: optional<CredentialsCreateRequestExternalType>
            card_format: optional<CredentialsCreateRequestCardFormat>
            is_override_key: optional<boolean>
            starts_at: optional<datetime>
            ends_at: optional<datetime>
      response:
        docs: OK
        type: CredentialsCreateResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    delete:
      path: /acs/credentials/delete
      method: POST
      auth: true
      display-name: /acs/credentials/delete
      request:
        name: CredentialsDeleteRequest
        body:
          properties:
            acs_credential_id: string
      response:
        docs: OK
        type: CredentialsDeleteResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    get:
      path: /acs/credentials/get
      method: POST
      auth: true
      display-name: /acs/credentials/get
      request:
        name: CredentialsGetRequest
        body:
          properties:
            acs_credential_id: string
      response:
        docs: OK
        type: CredentialsGetResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    list:
      path: /acs/credentials/list
      method: POST
      auth: true
      display-name: /acs/credentials/list
      request:
        body: CredentialsListRequest
      response:
        docs: OK
        type: CredentialsListResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    unassign:
      path: /acs/credentials/unassign
      method: POST
      auth: true
      display-name: /acs/credentials/unassign
      request:
        name: CredentialsUnassignRequest
        body:
          properties:
            acs_user_id: string
            acs_credential_id: string
      response:
        docs: OK
        type: CredentialsUnassignResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    update:
      path: /acs/credentials/update
      method: POST
      auth: true
      display-name: /acs/credentials/update
      request:
        name: CredentialsUpdateRequest
        body:
          properties:
            acs_credential_id: string
            code: string
      response:
        docs: OK
        type: CredentialsUpdateResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
