# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  root: ../__package__.yml

service:
  auth: false
  base-path: ""
  endpoints:
    add_to_access_group:
      path: /acs/users/add_to_access_group
      method: POST
      auth: true
      display-name: /acs/users/add_to_access_group
      request:
        name: UsersAddToAccessGroupRequest
        body:
          properties:
            acs_user_id: string
            acs_access_group_id: string
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    create:
      path: /acs/users/create
      method: POST
      auth: true
      display-name: /acs/users/create
      request:
        name: UsersCreateRequest
        body:
          properties:
            acs_system_id: string
            acs_access_group_ids: optional<list<string>>
            user_identity_id: optional<string>
            access_schedule: optional<UsersCreateRequestAccessSchedule>
            full_name: optional<string>
            email:
              docs: "Deprecated: use email_address."
              type: optional<string>
            phone_number: optional<string>
            email_address: optional<string>
      response:
        docs: OK
        type: UsersCreateResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    delete:
      path: /acs/users/delete
      method: POST
      auth: true
      display-name: /acs/users/delete
      request:
        name: UsersDeleteRequest
        body:
          properties:
            acs_user_id: string
      response:
        docs: OK
        type: UsersDeleteResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    get:
      path: /acs/users/get
      method: POST
      auth: true
      display-name: /acs/users/get
      request:
        name: UsersGetRequest
        body:
          properties:
            acs_user_id: string
      response:
        docs: OK
        type: UsersGetResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    list:
      path: /acs/users/list
      method: POST
      auth: true
      display-name: /acs/users/list
      request:
        name: UsersListRequest
        body:
          properties:
            user_identity_id: optional<string>
            user_identity_phone_number: optional<string>
            user_identity_email_address: optional<string>
            acs_system_id: optional<string>
      response:
        docs: OK
        type: UsersListResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    list_accessible_entrances:
      path: /acs/users/list_accessible_entrances
      method: POST
      auth: true
      display-name: /acs/users/list_accessible_entrances
      request:
        name: UsersListAccessibleEntrancesRequest
        body:
          properties:
            acs_user_id: string
      response:
        docs: OK
        type: UsersListAccessibleEntrancesResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    remove_from_access_group:
      path: /acs/users/remove_from_access_group
      method: POST
      auth: true
      display-name: /acs/users/remove_from_access_group
      request:
        name: UsersRemoveFromAccessGroupRequest
        body:
          properties:
            acs_user_id: string
            acs_access_group_id: string
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    suspend:
      path: /acs/users/suspend
      method: POST
      auth: true
      display-name: /acs/users/suspend
      request:
        name: UsersSuspendRequest
        body:
          properties:
            acs_user_id: string
      response:
        docs: OK
        type: UsersSuspendResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    unsuspend:
      path: /acs/users/unsuspend
      method: POST
      auth: true
      display-name: /acs/users/unsuspend
      request:
        name: UsersUnsuspendRequest
        body:
          properties:
            acs_user_id: string
      response:
        docs: OK
        type: UsersUnsuspendResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

    update:
      path: /acs/users/update
      method: POST
      auth: true
      display-name: /acs/users/update
      request:
        name: UsersUpdateRequest
        body:
          properties:
            access_schedule: optional<UsersUpdateRequestAccessSchedule>
            acs_user_id: string
            full_name: optional<string>
            email:
              docs: "Deprecated: use email_address."
              type: optional<string>
            phone_number: optional<string>
            email_address: optional<string>
            hid_acs_system_id: optional<string>
      response:
        docs: OK
        type: UsersUpdateResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError

types:
  UsersCreateRequestAccessSchedule:
    properties:
      starts_at: datetime
      ends_at: datetime

  UsersCreateResponse:
    properties:
      acs_user: root.AcsUser
      ok: boolean

  UsersDeleteResponse:
    properties:
      ok: boolean

  UsersGetResponse:
    properties:
      acs_user: root.AcsUser
      ok: boolean

  UsersListResponse:
    properties:
      acs_users: list<root.AcsUser>
      ok: boolean

  UsersListAccessibleEntrancesResponseAcsEntrancesItem:
    properties:
      acs_entrance_id: string
      display_name: string
      acs_system_id: string
      created_at: datetime

  UsersListAccessibleEntrancesResponse:
    properties:
      acs_entrances: list<UsersListAccessibleEntrancesResponseAcsEntrancesItem>
      ok: boolean

  UsersSuspendResponse:
    properties:
      ok: boolean

  UsersUnsuspendResponse:
    properties:
      ok: boolean

  UsersUpdateRequestAccessSchedule:
    properties:
      starts_at: datetime
      ends_at: datetime

  UsersUpdateResponse:
    properties:
      ok: boolean
